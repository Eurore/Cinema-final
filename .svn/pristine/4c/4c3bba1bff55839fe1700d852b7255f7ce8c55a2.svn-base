const cinema = Vue.reactive({
	movies: [],//moviesDB,
	movie: {
		id: null,
		date: null,
		tickets: null,
		//occupiedSeats: null,
		seats: null,
		total: null,
		reservationNumber: null,
	},
	activeDate: 0,
	selectedEventUnavailableSeats: [],

	/**
	 *  Get from API all movie events for specific date
	 *	date - string format yyyy-mm-dd
	 *	if no date is provided, the API endpoint will return the movies for today
	*/
	getMoviesByDate(date) {
		if(typeof date == "undefined") date = "";
		
		fetch(`https://cinema.smart-dg.com/event/list/?date=${date}`, {
			mode: "no-cors"
		})
		.then(response => response.json())
		.then(function(data){
			console.log("movies fetched", data)
			cinema.movies = data;
		}.bind(cinema));
	},

	/**
	 * Returns an array of the already reserved seats of a movie event in format: [36, 34, 35, 23]
	 */
	getUnavailableSeats(){
		var postDatetime = cinema.movie.date.replaceAll(",","");
		fetch(`https://cinema.smart-dg.com/event/reserved-seats/?movie_id=${cinema.movie.id}&datetime=${postDatetime}`, {
			mode: "no-cors"
		})
		.then(response => response.json())
		.then(function(data){
			console.log("occupied seats fetched", data, data.reserved_seats)
			cinema.selectedEventUnavailableSeats = data.reserved_seats;
		}.bind(cinema));
	},

	/**
	 * Generate a week starting from the current date.
	 *
	 * @return  {array}
	 */
	getWeek() {
		const now = {
			day: new Date().getDate(),
			month: new Date().getMonth() + 1,
			year: new Date().getFullYear(),
		};

		const generateWeek = [...Array(7)].map((_, idx) => {
			let date = new Date(`${now.year},${now.month},${now.day + idx}`);
			if (isNaN(date)) {
				date = new Date(`${now.year},${now.month + 1}, ${idx}`);
			}
			return date;
		});

		return generateWeek.map((item) => {
			return {
				dayName: new Date(item).toLocaleDateString("BG", { weekday: "long" }),
				dayMonth: `${new Date(item).getDate()}${
					new Date(item).getMonth() + 1 < 10
						? `.0${new Date(item).getMonth() + 1}`
						: new Date(item).getMonth() + 1
				}`,
				fullDate: `${new Date(item).getFullYear()}-${new Date(item).getMonth() + 1}-${new Date(
					item
				).getDate()}`,
			};
		});
	},
	auth: false,
});

const app = Vue.createApp({
	components: {
		Movies,
		Login,
		Account,
		Tickets,
		Seats,
	},
	setup() {
		cinema.getMoviesByDate();
		getMovieFromLocalStorage();
		(async () => {
			const user = await magic.user.getMetadata();
			if (user?.email) {
				cinema.auth = {
					...cinema.auth,
					email: user.email,
				};
			}
		})();

		return {
			cinema,
		};
	},
});

app.use(router);
app.mount("#app");
